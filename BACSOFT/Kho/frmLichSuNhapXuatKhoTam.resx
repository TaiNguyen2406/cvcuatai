<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="BarManager1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="txtSQL.EditValue" xml:space="preserve">
    <value>

declare @tblKQ as table(
	Ngay datetime,
	SoCG nvarchar(30),
	SoPhieu nvarchar(30),
	YeuCauXuat float,
	YeuCauTra float,
	XuatThucCT float,
	XuatTam float,
	NhanVienYeuCau nvarchar(250),
	PhuTrachKho nvarchar(250),
	MaKH nvarchar(250),
	TenCT nvarchar(4000)
)

declare @IdVatTu as bigint

set @IdVatTu = -797879


INSERT INTO @tblKQ(Ngay,SoCG,SoPhieu,YeuCauXuat,MaKH,TenCT,NhanVienYeuCau,PhuTrachKho)
SELECT ThoiGianXuat,pxkt.SoCG,'XT '+SoPhieu,SlXuatKho,
(select ttcMa from khachhang where ID = (select IDKhachhang from bangchaogia where sophieu = pxkt.SoCG))MaKH,
(select TenDuAn from bangchaogia where sophieu = pxkt.SoCG)TenCT,
(select Ten from nhansu where id = pxkt.IdNguoiLap)NhanVienYeuCau,
(select Ten from nhansu where id = pxkt.IdNguoiXuat)PhuTrachKho
FROM PHIEUXUATKHOTAM pxkt LEFT JOIN XUATKHOTAM xkt ON pxkt.Id = xkt.iD_Phieu
WHERE isnull(SlXuatKho,0) &lt;&gt; 0 and IdVatTu = @IdVatTu
OPTION	(FORCE ORDER)


INSERT INTO @tblKQ(Ngay,SoCG,SoPhieu,YeuCauTra,MaKH,TenCT,NhanVienYeuCau,PhuTrachKho)
SELECT ThoiGianNhap,pnkt.SoCG,'NT '+SoPhieu,SlNhapKho,
(select ttcMa from khachhang where ID = (select IDKhachhang from bangchaogia where sophieu = pnkt.SoCG))MaKH,
(select TenDuAn from bangchaogia where sophieu = pnkt.SoCG)TenCT,
(select Ten from nhansu where id = pnkt.IdNguoiLap)NhanVienYeuCau,
(select Ten from nhansu where id = pnkt.IdNguoiXuat)PhuTrachKho
FROM PHIEUNHAPKHOTAM pnkt LEFT JOIN NHAPKHOTAM nkt ON pnkt.Id = nkt.iD_Phieu
WHERE isnull(SlNhapKho,0) &lt;&gt; 0 and IdVatTu = @IdVatTu
OPTION	(FORCE ORDER)


INSERT INTO @tblKQ(Ngay,SoCG,SoPhieu,XuatThucCT,MaKH,TenCT,PhuTrachKho)
SELECT NgayThang,SophieuCG,'XK '+pxk.SoPhieu,SoLuong,
(select ttcMa from khachhang where ID = pxk.IdKhachhang)MaKH,
(select TenDuAn from bangchaogia where sophieu = pxk.SophieuCG)TenCT,
(select Ten from nhansu where id = pxk.IDUSer)PhuTrachKho
from phieuxuatkho pxk left join xuatkho xk on pxk.Sophieu = xk.SoPhieu
where IdVatTu = @IdVatTu and pxk.SophieuCG in (select distinct SoCG FROM @tblKQ)
OPTION	(FORCE ORDER)


select * from @tblKQ order by Ngay


</value>
  </data>
</root>